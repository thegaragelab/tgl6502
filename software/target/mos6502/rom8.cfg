# Linker configuration for an 8K ROM image for the TGL-6502
#
# The memory map looks like this:
#
#   $0000  - Zero page
#   $0100  - Call stack
#   $0400  - Start of usable RAM
#   $E000  - Upper 8K of ROM

MEMORY {
  ZP:    start = $0000, size = $0100, type = rw, define = yes;
  RAM:   start = $0400, size = $0400, type = rw, define = yes;
  STACK: start = $0800, size = $0400, type = rw, define = yes;
  ROM:   start = $E000, size = $2000, type = ro, define = yes, file = %O, fill = yes;
  }

SEGMENTS {
  STARTUP:  load = ROM, type = ro;
  LOWCODE:  load = ROM, type = ro,               optional = yes;
  INIT:     load = ROM, type = ro, define = yes, optional = yes;
  CODE:     load = ROM, type = ro;
  RODATA:   load = ROM, type = ro;
  DATA:     load = ROM, run = RAM, type = rw, define = yes;
  BSS:      load = RAM, type = bss, define = yes;
  HEAP:     load = RAM, type = bss, optional = yes; # must sit just below stack
  ZEROPAGE: load = ZP,  type = zp;
  }

FILES {
  %O: format = bin;
  }

FEATURES {
  CONDES: segment = INIT,
          type = constructor,
          label = __CONSTRUCTOR_TABLE__,
          count = __CONSTRUCTOR_COUNT__;
  CONDES: segment = RODATA,
          type = destructor,
          label = __DESTRUCTOR_TABLE__,
          count = __DESTRUCTOR_COUNT__;
  CONDES: segment = RODATA,
          type = interruptor,
          label = __INTERRUPTOR_TABLE__,
          count = __INTERRUPTOR_COUNT__;
  }

SYMBOLS {
  # Define the stack size for the application
  __STACKSIZE__:  type = weak, value = $400;
  }
